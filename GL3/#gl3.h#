#ifndef __glcorearb_h_
#define __glcorearb_h_ 1

#ifdef __cplusplus
extern "C" {
  #endif

  /*
  ** Copyright (c) 2013-2016 The Khronos Group Inc.
  **
  ** Permission is hereby granted, free of charge, to any person obtaining a
  ** copy of this software and/or associated documentation files (the
  ** "Materials"), to deal in the Materials without restriction, including
  ** without limitation the rights to use, copy, modify, merge, publish,
  ** distribute, sublicense, and/or sell copies of the Materials, and to
  ** permit persons to whom the Materials are furnished to do so, subject to
  ** the following conditions:
  **
  ** The above copyright notice and this permission notice shall be included
  ** in all copies or substantial portions of the Materials.
  **
  ** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
  */
  /*
  ** This header is generated from the Khronos OpenGL / OpenGL ES XML
  ** API Registry. The current version of the Registry, generator scripts
  ** used to make the header, and the header can be found at
  **   http://www.opengl.org/registry/
  **
  ** Khronos $Revision: 32433 $ on $Date: 2016-02-10 02:02:08 -0500 (Wed, 10 Feb 2016) $
  */

#if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__) && !defined(__SCITECH_SNAP__)
  #ifndef WIN32_LEAN_AND_MEAN
  #define WIN32_LEAN_AND_MEAN 1
  #endif
  #include <windows.h>
  #endif

  #ifndef APIENTRY
  #define APIENTRY
  #endif
  #ifndef APIENTRYP
  #define APIENTRYP APIENTRY *
  #endif
  #ifndef GLAPI
  #define GLAPI extern
  #endif

  /* glcorearb.h is for use with OpenGL core profile implementations.
  ** It should should be placed in the same directory as gl.h and
  ** included as <GL/glcorearb.h>.
  **
  ** glcorearb.h includes only APIs in the latest OpenGL core profile
  ** implementation together with APIs in newer ARB extensions which 
  ** can be supported by the core profile. It does not, and never will
  ** include functionality removed from the core profile, such as
  ** fixed-function vertex and fragment processing.
  **
  ** Do not #include both <GL/glcorearb.h> and either of <GL/gl.h> or
  ** <GL/glext.h> in the same source file.
  */

  /* Generated C header for:
   * API: gl
   * Profile: core
   * Versions considered: .*
   * Versions emitted: .*
   * Default extensions included: glcore
   * Additional extensions included: _nomatch_^
   * Extensions removed: _nomatch_^
   */

  #ifndef GL_VERSION_1_0
  #define GL_VERSION_1_0 1
  typedef void GLvoid;
  typedef unsigned int GLenum;
  typedef float GLfloat;
  typedef int GLint;
  typedef int GLsizei;
  typedef unsigned int GLbitfield;
  typedef double GLdouble;
  typedef unsigned int GLuint;
  typedef unsigned char GLboolean;
  typedef unsigned char GLubyte;
  typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);
  typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);
  typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);
  typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);
  typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);
  typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);
  typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);
  typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);
  typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);
  typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);
  typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);
  typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
  typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
  typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum buf);
  typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);
  typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
  typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);
  typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);
  typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);
  typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
  typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);
  typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);
  typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);
  typedef void (APIENTRYP PFNGLFINISHPROC) (void);
  typedef void (APIENTRYP PFNGLFLUSHPROC) (void);
  typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);
  typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);
  typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);
  typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);
  typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);
  typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);
  typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);
  typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum src);
  typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
  typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *data);
  typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *data);
  typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);
  typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *data);
  typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *data);
  typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);
  typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
  typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);
  typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
  typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pname, GLfloat *params);
  typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pname, GLint *params);
  typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);
  typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);
  typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);
  #ifdef GL_GLEXT_PROTOTYPES
  GLAPI void APIENTRY glCullFace (GLenum mode);
  GLAPI void APIENTRY glFrontFace (GLenum mode);
  GLAPI void APIENTRY glHint (GLenum target, GLenum mode);
  GLAPI void APIENTRY glLineWidth (GLfloat width);
  GLAPI void APIENTRY glPointSize (GLfloat size);
  GLAPI void APIENTRY glPolygonMode (GLenum face, GLenum mode);
  GLAPI void APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
  GLAPI void APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);
  GLAPI void APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);
  GLAPI void APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);
  GLAPI void APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint *params);
  GLAPI void APIENTRY glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
  GLAPI void APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
  GLAPI void APIENTRY glDrawBuffer (GLenum buf);
  GLAPI void APIENTRY glClear (GLbitfield mask);
  GLAPI void APIENTRY glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
  GLAPI void APIENTRY glClearStencil (GLint s);
  GLAPI void APIENTRY glClearDepth (GLdouble depth);
  GLAPI void APIENTRY glStencilMask (GLuint mask);
  GLAPI void APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
  GLAPI void APIENTRY glDepthMask (GLboolean flag);
  GLAPI void APIENTRY glDisable (GLenum cap);
  GLAPI void APIENTRY glEnable (GLenum cap);
  GLAPI void APIENTRY glFinish (void);
  GLAPI void APIENTRY glFlush (void);
  GLAPI void APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);
  GLAPI void APIENTRY glLogicOp (GLenum opcode);
  GLAPI void APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);
  GLAPI void APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
  GLAPI void APIENTRY glDepthFunc (GLenum func);
  GLAPI void APIENTRY glPixelStoref (GLenum pname, GLfloat param);
  GLAPI void APIENTRY glPixelStorei (GLenum pname, GLint param);
  GLAPI void APIENTRY glReadBuffer (GLenum src);
  GLAPI void APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
  GLAPI void APIENTRY glGetBooleanv (GLenum pname, GLboolean *data);
  GLAPI void APIENTRY glGetDoublev (GLenum pname, GLdouble *data);
  GLAPI GLenum APIENTRY glGetError (void);
  GLAPI void APIENTRY glGetFloatv (GLenum pname, GLfloat *data);
  GLAPI void APIENTRY glGetIntegerv (GLenum pname, GLint *data);
  GLAPI const GLubyte *APIENTRY glGetString (GLenum name);
  GLAPI void APIENTRY glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
  GLAPI void APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);
  GLAPI void APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);
  GLAPI void APIENTRY glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params);
  GLAPI void APIENTRY glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);
  GLAPI GLboolean APIENTRY glIsEnabled (GLenum cap);
  GLAPI void APIENTRY glDepthRange (GLdouble near, GLdouble far);
  GLAPI void APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);
  #endif
#endif /* GL_VERSION_1_0 */

  #ifndef GL_VERSION_1_1
  #define GL_VERSION_1_1 1
  typedef float GLclampf;
  typedef double GLclampd;
  #define GL_DEPTH_BUFFER_BIT               0x00000100
  #define GL_STENCIL_BUFFER_BIT             0x00000400
  #define GL_COLOR_BUFFER_BIT               0x00004000
  #define GL_FALSE                          0
  #define GL_TRUE                           1
  #define GL_POINTS                         0x0000
  #define GL_LINES                          0x0001
  #define GL_LINE_LOOP                      0x0002
  #define GL_LINE_STRIP                     0x0003
  #define GL_TRIANGLES                      0x0004
  #define GL_TRIANGLE_STRIP                 0x0005
  #define GL_TRIANGLE_FAN                   0x0006
  #define GL_QUADS                          0x0007
  #define GL_NEVER                          0x0200
  #define GL_LESS                           0x0201
  #define GL_EQUAL                          0x0202
  #define GL_LEQUAL                         0x0203
  #define GL_GREATER                        0x0204
  #define GL_NOTEQUAL                       0x0205
  #define GL_GEQUAL                         0x0206
  #define GL_ALWAYS                         0x0207
  #define GL_ZERO                           0
  #define GL_ONE                            1
  #define GL_SRC_COLOR                      0x0300
  #define GL_ONE_MINUS_SRC_COLOR            0x0301
  #define GL_SRC_ALPHA                      0x0302
  #define GL_ONE_MINUS_SRC_ALPHA            0x0303
  #define GL_DST_ALPHA                      0x0304
  #define GL_ONE_MINUS_DST_ALPHA            0x0305
  #define GL_DST_COLOR                      0x0306
  #define GL_ONE_MINUS_DST_COLOR            0x0307
  #define GL_SRC_ALPHA_SATURATE             0x0308
  #define GL_NONE                           0
  #define GL_FRONT_LEFT                     0x0400
  #define GL_FRONT_RIGHT                    0x0401
  #define GL_BACK_LEFT                      0x0402
  #define GL_BACK_RIGHT                     0x0403
  #define GL_FRONT                          0x0404
  #define GL_BACK                           0x0405
  #define GL_LEFT                           0x0406
  #define GL_RIGHT                          0x0407
  #define GL_FRONT_AND_BACK                 0x0408
  #define GL_NO_ERROR                       0
  #define GL_INVALID_ENUM                   0x0500
  #define GL_INVALID_VALUE                  0x0501
  #define GL_INVALID_OPERATION              0x0502
  #define GL_OUT_OF_MEMORY                  0x0505
  #define GL_CW                             0x0900
  #define GL_CCW                            0x0901
  #define GL_POINT_SIZE                     0x0B11
  #define GL_POINT_SIZE_RANGE               0x0B12
  #define GL_POINT_SIZE_GRANULARITY         0x0B13
  #define GL_LINE_SMOOTH                    0x0B20
  #define GL_LINE_WIDTH                     0x0B21
  #define GL_LINE_WIDTH_RANGE               0x0B22
  #define GL_LINE_WIDTH_GRANULARITY         0x0B23
  #define GL_POLYGON_MODE                   0x0B40
  #define GL_POLYGON_SMOOTH                 0x0B41
  #define GL_CULL_FACE                      0x0B44
  #define GL_CULL_FACE_MODE                 0x0B45
  #define GL_FRONT_FACE                     0x0B46
  #define GL_DEPTH_RANGE                    0x0B70
  #define GL_DEPTH_TEST                     0x0B71
  #define GL_DEPTH_WRITEMASK                0x0B72
  #define GL_DEPTH_CLEAR_VALUE              0x0B73
  #define GL_DEPTH_FUNC                     0x0B74
  #define GL_STENCIL_TEST                   0x0B90
  #define GL_STENCIL_CLEAR_VALUE            0x0B91
  #define GL_STENCIL_FUNC                   0x0B92
  #define GL_STENCIL_VALUE_MASK             0x0B93
  #define GL_STENCIL_FAIL                   0x0B94
  #define GL_STENCIL_PASS_DEPTH_FAIL        0x0B95
  #define GL_STENCIL_PASS_DEPTH_PASS        0x0B96
  #define GL_STENCIL_REF                    0x0B97
  #define GL_STENCIL_WRITEMASK              0x0B98
  #define GL_VIEWPORT                       0x0BA2
  #define GL_DITHER                         0x0BD0
  #define GL_BLEND_DST                      0x0BE0
  #define GL_BLEND_SRC                      0x0BE1
  #define GL_BLEND                          0x0BE2
  #define GL_LOGIC_OP_MODE                  0x0BF0
  #define GL_COLOR_LOGIC_OP                 0x0BF2
  #define GL_DRAW_BUFFER                    0x0C01
  #define GL_READ_BUFFER                    0x0C02
  #define GL_SCISSOR_BOX                    0x0C10
  #define GL_SCISSOR_TEST                   0x0C11
  #define GL_COLOR_CLEAR_VALUE              0x0C22
  #define GL_COLOR_WRITEMASK                0x0C23
  #define GL_DOUBLEBUFFER                   0x0C32
  #define GL_STEREO                         0x0C33
  #define GL_LINE_SMOOTH_HINT               0x0C52
  #define GL_POLYGON_SMOOTH_HINT            0x0C53
  #define GL_UNPACK_SWAP_BYTES              0x0CF0
  #define GL_UNPACK_LSB_FIRST               0x0CF1
  #define GL_UNPACK_ROW_LENGTH              0x0CF2
  #define GL_UNPACK_SKIP_ROWS               0x0CF3
  #define GL_UNPACK_SKIP_PIXELS             0x0CF4
  #define GL_UNPACK_ALIGNMENT               0x0CF5
  #define GL_PACK_SWAP_BYTES                0x0D00
  #define GL_PACK_LSB_FIRST                 0x0D01
  #define GL_PACK_ROW_LENGTH                0x0D02
  #define GL_PACK_SKIP_ROWS                 0x0D03
  #define GL_PACK_SKIP_PIXELS               0x0D04
  #define GL_PACK_ALIGNMENT                 0x0D05
  #define GL_MAX_TEXTURE_SIZE               0x0D33
  #define GL_MAX_VIEWPORT_DIMS              0x0D3A
  #define GL_SUBPIXEL_BITS                  0x0D50
  #define GL_TEXTURE_1D                     0x0DE0
  #define GL_TEXTURE_2D                     0x0DE1
  #define GL_POLYGON_OFFSET_UNITS           0x2A00
  #define GL_POLYGON_OFFSET_POINT           0x2A01
  #define GL_POLYGON_OFFSET_LINE            0x2A02
  #define GL_POLYGON_OFFSET_FILL            0x8037
  #define GL_POLYGON_OFFSET_FACTOR          0x8038
  #define GL_TEXTURE_BINDING_1D             0x8068
  #define GL_TEXTURE_BINDING_2D             0x8069
  #define GL_TEXTURE_WIDTH                  0x1000
  #define GL_TEXTURE_HEIGHT                 0x1001
  #define GL_TEXTURE_INTERNAL_FORMAT        0x1003
  #define GL_TEXTURE_BORDER_COLOR           0x1004
  #define GL_TEXTURE_RED_SIZE               0x805C
  #define GL_TEXTURE_GREEN_SIZE             0x805D
  #define GL_TEXTURE_BLUE_SIZE              0x805E
  #define GL_TEXTURE_ALPHA_SIZE             0x805F
  #define GL_DONT_CARE                      0x1100
  #define GL_FASTEST                        0x1101
  #define GL_NICEST                         0x1102
  #define GL_BYTE                           0x1400
  #define GL_UNSIGNED_BYTE                  0x1401
  #define GL_SHORT                          0x1402
  #define GL_UNSIGNED_SHORT                 0x1403
  #define GL_INT                            0x1404
  #define GL_UNSIGNED_INT                   0x1405
  #define GL_FLOAT                          0x1406
  #define GL_DOUBLE                         0x140A
  #define GL_STACK_OVERFLOW                 0x0503
  #define GL_STACK_UNDERFLOW                0x0504
  #define GL_CLEAR                          0x1500
  #define GL_AND                            0x1501
  #define GL_AND_REVERSE                    0x1502
  #define GL_COPY                           0x1503
  #define GL_AND_INVERTED                   0x1504
  #define GL_NOOP                           0x1505
  #define GL_XOR                            0x1506
  #define GL_OR                             0x1507
  #define GL_NOR                            0x1508
  #define GL_EQUIV                          0x1509
  #define GL_INVERT                         0x150A
  #define GL_OR_REVERSE                     0x150B
  #define GL_COPY_INVERTED                  0x150C
  #define GL_OR_INVERTED                    0x150D
  #define GL_NAND                           0x150E
  #define GL_SET                            0x150F
  #define GL_TEXTURE                        0x1702
  #define GL_COLOR                          0x1800
  #define GL_DEPTH                          0x1801
  #define GL_STENCIL                        0x1802
  #define GL_STENCIL_INDEX                  0x1901
  #define GL_DEPTH_COMPONENT                0x1902
  #define GL_RED                            0x1903
  #define GL_GREEN                          0x1904
  #define GL_BLUE                           0x1905
  #define GL_ALPHA                          0x1906
  #define GL_RGB                            0x1907
  #define GL_RGBA                           0x1908
  #define GL_POINT                          0x1B00
  #define GL_LINE                           0x1B01
  #define GL_FILL                           0x1B02
  #define GL_KEEP                           0x1E00
  #define GL_REPLACE                        0x1E01
  #define GL_INCR                           0x1E02
  #define GL_DECR                           0x1E03
  #define GL_VENDOR                         0x1F00
  #define GL_RENDERER                       0x1F01
  #define GL_VERSION                        0x1F02
  #define GL_EXTENSIONS                     0x1F03
  #define GL_NEAREST                        0x2600
  #define GL_LINEAR                         0x2601
  #define GL_NEAREST_MIPMAP_NEAREST         0x2700
  #define GL_LINEAR_MIPMAP_NEAREST          0x2701
  #define GL_NEAREST_MIPMAP_LINEAR          0x2702
  #define GL_LINEAR_MIPMAP_LINEAR           0x2703
  #define GL_TEXTURE_MAG_FILTER             0x2800
  #define GL_TEXTURE_MIN_FILTER             0x2801
  #define GL_TEXTURE_WRAP_S                 0x2802
  #define GL_TEXTURE_WRAP_T                 0x2803
  #define GL_PROXY_TEXTURE_1D               0x8063
  #define GL_PROXY_TEXTURE_2D               0x8064
  #define GL_REPEAT                         0x2901
  #define GL_R3_G3_B2                       0x2A10
  #define GL_RGB4                           0x804F
  #define GL_RGB5                           0x8050
  #define GL_RGB8                           0x8051
  #define GL_RGB10                          0x8052
  #define GL_RGB12                          0x8053
  #define GL_RGB16                          0x8054
  #define GL_RGBA2                          0x8055
  #define GL_RGBA4                          0x8056
  #define GL_RGB5_A1                        0x8057
  #define GL_RGBA8                          0x8058
  #define GL_RGB10_A2                       0x8059
  #define GL_RGBA12                         0x805A
  #define GL_RGBA16                         0x805B
  #define GL_VERTEX_ARRAY                   0x8074
  typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);
  typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices);
  typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, void **params);
  typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);
  typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
  typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
  typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
  typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
  typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
  typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
  typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);
  typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);
  typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);
  typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);
  #ifdef GL_GLEXT_PROTOTYPES
  GLAPI void APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);
  GLAPI void APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, const void *indices);
  GLAPI void APIENTRY glGetPointerv (GLenum pname, void **params);
  GLAPI void APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);
  GLAPI void APIENTRY glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
  GLAPI void APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
  GLAPI void APIENTRY glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
  GLAPI void APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
  GLAPI void APIENTRY glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
  GLAPI void APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
  GLAPI void APIENTRY glBindTexture (GLenum target, GLuint texture);
  GLAPI void APIENTRY glDeleteTextures (GLsizei n, const GLuint *textures);
  GLAPI void APIENTRY glGenTextures (GLsizei n, GLuint *textures);
  GLAPI GLboolean APIENTRY glIsTexture (GLuint texture);
  #endif
#endif /* GL_VERSION_1_1 */

  #ifndef GL_VERSION_1_2
  #define GL_VERSION_1_2 1
  #define GL_UNSIGNED_BYTE_3_3_2            0x8032
  #define GL_UNSIGNED_SHORT_4_4_4_4         0x8033
  #define GL_UNSIGNED_SHORT_5_5_5_1         0x8034
  #define GL_UNSIGNED_INT_8_8_8_8           0x8035
  #define GL_UNSIGNED_INT_10_10_10_2        0x8036
  #define GL_TEXTURE_BINDING_3D             0x806A
  #define GL_PACK_SKIP_IMAGES               0x806B
  #define GL_PACK_IMAGE_HEIGHT              0x806C
  #define GL_UNPACK_SKIP_IMAGES             0x806D
  #define GL_UNPACK_IMAGE_HEIGHT            0x806E
  #define GL_TEXTURE_3D                     0x806F
  #define GL_PROXY_TEXTURE_3D               0x8070
  #define GL_TEXTURE_DEPTH                  0x8071
  #define GL_TEXTURE_WRAP_R                 0x8072
  #define GL_MAX_3D_TEXTURE_SIZE            0x8073
  #define GL_UNSIGNED_BYTE_2_3_3_REV        0x8362
  #define GL_UNSIGNED_SHORT_5_6_5           0x8363
  #define GL_UNSIGNED_SHORT_5_6_5_REV       0x8364
  #define GL_UNSIGNED_SHORT_4_4_4_4_REV     0x8365
  #define GL_UNSIGNED_SHORT_1_5_5_5_REV     0x8366
  #define GL_UNSIGNED_INT_8_8_8_8_REV       0x8367
  #define GL_UNSIGNED_INT_2_10_10_10_REV    0x8368
  #define GL_BGR                            0x80E0
  #define GL_BGRA                           0x80E1
  #define GL_MAX_ELEMENTS_VERTICES          0x80E8
  #define GL_MAX_ELEMENTS_INDICES           0x80E9
  #define GL_CLAMP_TO_EDGE                  0x812F
  #define GL_TEXTURE_MIN_LOD                0x813A
  #define GL_TEXTURE_MAX_LOD                0x813B
  #define GL_TEXTURE_BASE_LEVEL             0x813C
  #define GL_TEXTURE_MAX_LEVEL              0x813D
  #define GL_SMOOTH_POINT_SIZE_RANGE        0x0B12
  #define GL_SMOOTH_POINT_SIZE_GRANULARITY  0x0B13
  #define GL_SMOOTH_LINE_WIDTH_RANGE        0x0B22
  #define GL_SMOOTH_LINE_WIDTH_GRANULARITY  0x0B23
  #define GL_ALIASED_LINE_WIDTH_RANGE       0x846E
  typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
  typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
  typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
  typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
  #ifdef GL_GLEXT_PROTOTYPES
  GLAPI void APIENTRY glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
  GLAPI void APIENTRY glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
  GLAPI void APIENTRY glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
  GLAPI void APIENTRY glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
  #endif
#endif /* GL_VERSION_1_2 */

  #ifndef GL_VERSION_1_3
  #define GL_VERSION_1_3 1
  #define GL_TEXTURE0                       0x84C0
  #define GL_TEXTURE1                       0x84C1
  #define GL_TEXTURE2                       0x84C2
  #define GL_TEXTURE3                       0x84C3
  #define GL_TEXTURE4                       0x84C4
  #define GL_TEXTURE5                       0x84C5
  #define GL_TEXTURE6                       0x84C6
  #define GL_TEXTURE7                       0x84C7
  #define GL_TEXTURE8                       0x84C8
  #define GL_TEXTURE9                       0x84C9
  #define GL_TEXTURE10                      0x84CA
  #define GL_TEXTURE11                      0x84CB
  #define GL_TEXTURE12                      0x84CC
  #define GL_TEXTURE13                      0x84CD
  #define GL_TEXTURE14                      0x84CE
  #define GL_TEXTURE15                      0x84CF
  #define GL_TEXTURE16                      0x84D0
  #define GL_TEXTURE17                      0x84D1
  #define GL_TEXTURE18                      0x84D2
  #define GL_TEXTURE19                      0x84D3
  #define GL_TEXTURE20                      0x84D4
  #define GL_TEXTURE21                      0x84D5
  #define GL_TEXTURE22                      0x84D6
  #define GL_TEXTURE23                      0x84D7
  #define GL_TEXTURE24                      0x84D8
  #define GL_TEXTURE25                      0x84D9
  #define GL_TEXTURE26                      0x84DA
  #define GL_TEXTURE27                      0x84DB
  #define GL_TEXTURE28                      0x84DC
  #define GL_TEXTURE29                      0x84DD
  #define GL_TEXTURE30                      0x84DE
  #define GL_TEXTURE31                      0x84DF
  #define GL_ACTIVE_TEXTURE                 0x84E0
  #define GL_MULTISAMPLE                    0x809D
  #define GL_SAMPLE_ALPHA_TO_COVERAGE       0x809E
  #define GL_SAMPLE_ALPHA_TO_ONE            0x809F
  #define GL_SAMPLE_COVERAGE                0x80A0
  #define GL_SAMPLE_BUFFERS                 0x80A8
  #define GL_SAMPLES                        0x80A9
  #define GL_SAMPLE_COVERAGE_VALUE          0x80AA
  #define GL_SAMPLE_COVERAGE_INVERT         0x80AB
  #define GL_TEXTURE_CUBE_MAP               0x8513
  #define GL_TEXTURE_BINDING_CUBE_MAP       0x8514
  #define GL_TEXTURE_CUBE_MAP_POSITIVE_X    0x8515
  #define GL_TEXTURE_CUBE_MAP_NEGATIVE_X    0x8516
  #define GL_TEXTURE_CUBE_MAP_POSITIVE_Y    0x8517
  #define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y    0x8518
  #define GL_TEXTURE_CUBE_MAP_POSITIVE_Z    0x8519
  #define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z    0x851A
  #define GL_PROXY_TEXTURE_CUBE_MAP         0x851B
  #define GL_MAX_CUBE_MAP_TEXTURE_SIZE      0x851C
  #define GL_COMPRESSED_RGB                 0x84ED
  #define GL_COMPRESSED_RGBA                0x84EE
  #define GL_TEXTURE_COMPRESSION_HINT       0x84EF
  #define GL_TEXTURE_COMPRESSED_IMAGE_SIZE  0x86A0
  #define GL_TEXTURE_COMPRESSED             0x86A1
  #define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
  #define GL_COMPRESSED_TEXTURE_FORMATS     0x86A3
  #define GL_CLAMP_TO_BORDER                0x812D
  typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);
  typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
  typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
  typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
  typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
  typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
  typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
  typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
  typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);
  #ifdef GL_GLEXT_PROTOTYPES
  GLAPI void APIENTRY glActiveTexture (GLenum texture);
  GLAPI void APIENTRY glSampleCoverage (GLfloat value, GLboolean invert);
  GLAPI void APIENTRY glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
  GLAPI void APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
  GLAPI void APIENTRY glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
  GLAPI void APIENTRY glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
  GLAPI void APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
  GLAPI void APIENTRY glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
  GLAPI void APIENTRY glGetCompressedTexImage (GLenum target, GLint level, void *img);
  #endif
#endif /* GL_VERSION_1_3 */

  #ifndef GL_VERSION_1_4
  #define GL_VERSION_1_4 1
  #define GL_BLEND_DST_RGB                  0x80C8
  #define GL_BLEND_SRC_RGB                  0x80C9
  #define GL_BLEND_DST_ALPHA                0x80CA
  #define GL_BLEND_SRC_ALPHA                0x80CB
  #define GL_POINT_FADE_THRESHOLD_SIZE      0x8128
  #define GL_DEPTH_COMPONENT16              0x81A5
  #define GL_DEPTH_COMPONENT24              0x81A6
  #define GL_DEPTH_COMPONENT32              0x81A7
  #define GL_MIRRORED_REPEAT                0x8370
  #define GL_MAX_TEXTURE_LOD_BIAS           0x84FD
  #define GL_TEXTURE_LOD_BIAS               0x8501
  #define GL_INCR_WRAP                      0x8507
  #define GL_DECR_WRAP                      0x8508
  #define GL_TEXTURE_DEPTH_SIZE             0x884A
  #define GL_TEXTURE_COMPARE_MODE           0x884C
  #define GL_TEXTURE_COMPARE_FUNC           0x884D
  #define GL_FUNC_ADD                       0x8006
  #define GL_FUNC_SUBTRACT                  0x800A
  #define GL_FUNC_REVERSE_SUBTRACT          0x800B
  #define GL_MIN                            0x8007
  #define GL_MAX                            0x8008
  #define GL_CONSTANT_COLOR                 0x8001
  #define GL_ONE_MINUS_CONSTANT_COLOR       0x8002
  #define GL_CONSTANT_ALPHA                 0x8003
  #define GL_ONE_MINUS_CONSTANT_ALPHA       0x8004
  typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
  typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
  typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
  typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);
  typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);
  typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);
  typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);
  typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
  typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);
  #ifdef GL_GLEXT_PROTOTYPES
  GLAPI void APIENTRY glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
  GLAPI void APIENTRY glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
  GLAPI void APIENTRY glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
  GLAPI void APIENTRY glPointParameterf (GLenum pname, GLfloat param);
  GLAPI void APIENTRY glPointParameterfv (GLenum pname, const GLfloat *params);
  GLAPI void APIENTRY glPointParameteri (GLenum pname, GLint param);
  GLAPI void APIENTRY glPointParameteriv (GLenum pname, const GLint *params);
  GLAPI void APIENTRY glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
  GLAPI void APIENTRY glBlendEquation (GLenum mode);
  #endif
#endif /* GL_VERSION_1_4 */

  #ifndef GL_VERSION_1_5
  #define GL_VERSION_1_5 1
  #include <stddef.h>
  typedef ptrdiff_t GLsizeiptr;
  typedef ptrdiff_t GLintptr;
  #define GL_BUFFER_SIZE                    0x8764
  #define GL_BUFFER_USAGE                   0x8765
  #define GL_QUERY_COUNTER_BITS             0x8864
  #define GL_CURRENT_QUERY                  0x8865
  #define GL_QUERY_RESULT                   0x8866
  #define GL_QUERY_RESULT_AVAILABLE         0x8867
  #define GL_ARRAY_BUFFER                   0x8892
  #define GL_ELEMENT_ARRAY_BUFFER           0x8893
  #define GL_ARRAY_BUFFER_BINDING           0x8894
  #define GL_ELEMENT_ARRAY_BUFFER_BINDING   0x8895
  #define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
  #define GL_READ_ONLY                      0x88B8
  #define GL_WRITE_ONLY                     0x88B9
  #define GL_READ_WRITE                     0x88BA
  #define GL_BUFFER_ACCESS                  0x88BB
  #define GL_BUFFER_MAPPED                  0x88BC
  #define GL_BUFFER_MAP_POINTER             0x88BD
  #define GL_STREAM_DRAW                    0x88E0
  #define GL_STREAM_READ                    0x88E1
  #define GL_STREAM_COPY                    0x88E2
  #define GL_STATIC_DRAW                    0x88E4
  #define GL_STATIC_READ                    0x88E5
  #define GL_STATIC_COPY                    0x88E6
  #define GL_DYNAMIC_DRAW                   0x88E8
  #define GL_DYNAMIC_READ                   0x88E9
  #define GL_DYNAMIC_COPY                   0x88EA
  #define GL_SAMPLES_PASSED                 0x8914
  #define GL_SRC1_ALPHA                     0x8589
  typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);
  typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);
  typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);
  typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);
  typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);
  typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);
  typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);
  typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);
  typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);
  typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);
  typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);
  typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);
  typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, GLenum usage);
  typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
  typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, void *data);
  typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);
  typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);
  typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
  typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params);
  #ifdef GL_GLEXT_PROTOTYPES
  GLAPI void APIENTRY glGenQueries (GLsizei n, GLuint *ids);
  GLAPI void APIENTRY glDeleteQueries (GLsizei n, const GLuint *ids);
  GLAPI GLboolean APIENTRY glIsQuery (GLuint id);
  GLAPI void APIENTRY glBeginQuery (GLenum target, GLuint id);
  GLAPI void APIENTRY glEndQuery (GLenum target);
  GLAPI void APIENTRY glGetQueryiv (GLenum target, GLenum pname, GLint *params);
  GLAPI void APIENTRY glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params);
  GLAPI void APIENTRY glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params);
  GLAPI void APIENTRY glBindBuffer (GLenum target, GLuint buffer);
  GLAPI void APIENTRY glDeleteBuffers (GLsizei n, const GLuint *buffers);
  GLAPI void APIENTRY glGenBuffers (GLsizei n, GLuint *buffers);
  GLAPI GLboolean APIENTRY glIsBuffer (GLuint buffer);
  GLAPI void APIENTRY glBufferData (GLenum target, GLsizeiptr size, const void *data, GLenum usage);
  GLAPI void APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
  GLAPI void APIENTRY glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, void *data);
  GLAPI void *APIENTRY glMapBuffer (GLenum target, GLenum access);
  GLAPI GLboolean APIENTRY glUnmapBuffer (GLenum target);
  GLAPI void APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);
  GLAPI void APIENTRY glGetBufferPointerv (GLenum target, GLenum pname, void **params);
  #endif
#endif /* GL_VERSION_1_5 */

  #ifndef GL_VERSION_2_0
  #define GL_VERSION_2_0 1
  typedef char GLchar;
  typedef short GLshort;
  typedef signed char GLbyte;
  typedef unsigned short GLushort;
  #define GL_BLEND_EQUATION_RGB             0x8009
  #define GL_VERTEX_ATTRIB_ARRAY_ENABLED    0x8622
  #define GL_VERTEX_ATTRIB_ARRAY_SIZE       0x8623
  #define GL_VERTEX_ATTRIB_ARRAY_STRIDE     0x8624
  #define GL_VERTEX_ATTRIB_ARRAY_TYPE       0x8625
  #define GL_CURRENT_VERTEX_ATTRIB          0x8626
  #define GL_VERTEX_PROGRAM_POINT_SIZE      0x8642
  #define GL_VERTEX_ATTRIB_ARRAY_POINTER    0x8645
  #define GL_STENCIL_BACK_FUNC              0x8800
  #define GL_STENCIL_BACK_FAIL              0x8801
  #define GL_STENCIL_BACK_PASS_DEPTH_FAIL   0x8802
  #define GL_STENCIL_BACK_PASS_DEPTH_PASS   0x8803
  #define GL_MAX_DRAW_BUFFERS               0x8824
  #define GL_DRAW_BUFFER0                   0x8825
  #define GL_DRAW_BUFFER1                   0x8826
  #define GL_DRAW_BUFFER2                   0x8827
  #define GL_DRAW_BUFFER3                   0x8828
  #define GL_DRAW_BUFFER4                   0x8829
  #define GL_DRAW_BUFFER5                   0x882A
  #define GL_DRAW_BUFFER6                   0x882B
  #define GL_DRAW_BUFFER7                   0x882C
  #define GL_DRAW_BUFFER8                   0x882D
  #define GL_DRAW_BUFFER9                   0x882E
  #define GL_DRAW_BUFFER10                  0x882F
  #define GL_DRAW_BUFFER11                  0x8830
  #define GL_DRAW_BUFFER12                  0x8831
  #define GL_DRAW_BUFFER13                  0x8832
  #define GL_DRAW_BUFFER14                  0x8833
  #define GL_DRAW_BUFFER15                  0x8834
  #define GL_BLEND_EQUATION_ALPHA           0x883D
  #define GL_MAX_VERTEX_ATTRIBS             0x8869
  #define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
  #define GL_MAX_TEXTURE_IMAGE_UNITS        0x8872
  #define GL_FRAGMENT_SHADER                0x8B30
  #define GL_VERTEX_SHADER                  0x8B31
  #define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
  #define GL_MAX_VERTEX_UNIFORM_COMPONENTS  0x8B4A
  #define GL_MAX_VARYING_FLOATS             0x8B4B
  #define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
  #define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
  #define GL_SHADER_TYPE                    0x8B4F
  #define GL_FLOAT_VEC2                     0x8B50
  #define GL_FLOAT_VEC3                     0x8B51
  #define GL_FLOAT_VEC4                     0x8B52
  #define GL_INT_VEC2                       0x8B53
  #define GL_INT_VEC3                       0x8B54
  #define GL_INT_VEC4                       0x8B55
  #define GL_BOOL                           0x8B56
  #define GL_BOOL_VEC2                      0x8B57
  #define GL_BOOL_VEC3                      0x8B58
  #define GL_BOOL_VEC4                      0x8B59
  #define GL_FLOAT_MAT2                     0x8B5A
  #define GL_FLOAT_MAT3                     0x8B5B
  #define GL_FLOAT_MAT4                     0x8B5C
  #define GL_SAMPLER_1D                     0x8B5D
  #define GL_SAMPLER_2D                     0x8B5E
  #define GL_SAMPLER_3D                     0x8B5F
  #define GL_SAMPLER_CUBE                   0x8B60
  #define GL_SAMPLER_1D_SHADOW              0x8B61
  #define GL_SAMPLER_2D_SHADOW              0x8B62
  #define GL_DELETE_STATUS                  0x8B80
  #define GL_COMPILE_STATUS                 0x8B81
  #define GL_LINK_STATUS                    0x8B82
  #define GL_VALIDATE_STATUS                0x8B83
  #define GL_INFO_LOG_LENGTH                0x8B84
  #define GL_ATTACHED_SHADERS               0x8B85
  #define GL_ACTIVE_UNIFORMS                0x8B86
  #define GL_ACTIVE_UNIFORM_MAX_LENGTH      0x8B87
  #define GL_SHADER_SOURCE_LENGTH           0x8B88
  #define GL_ACTIVE_ATTRIBUTES              0x8B89
  #define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH    0x8B8A
  #define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
  #define GL_SHADING_LANGUAGE_VERSION       0x8B8C
  #define GL_CURRENT_PROGRAM                0x8B8D
  #define GL_POINT_SPRITE_COORD_ORIGIN      0x8CA0
  #define GL_LOWER_LEFT                     0x8CA1
  #define GL_UPPER_LEFT                     0x8CA2
  #define GL_STENCIL_BACK_REF               0x8CA3
  #define GL_STENCIL_BACK_VALUE_MASK        0x8CA4
  #define GL_STENCIL_BACK_WRITEMASK         0x8CA5
  typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);
  typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);
  typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
  typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
  typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);
  typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);
  typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);
  typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);
  typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);
  typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);
  typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);
  typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);
  typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);
  typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);